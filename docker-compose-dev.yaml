version: '3.9'

services:
  snapshot-collector:
    image: powerloom-local-collector
    expose:
      - 50051
    ports:
      - 50051:50051
    volumes:
      - local_cache:/home/ubuntu/local_cache/
      - ./logs/audit-protocol:/root/.pm2/logs
    command:
      bash -c "sh init_processes.sh"
    environment:
      - IPFS_URL=$IPFS_URL
      - PROTOCOL_STATE_CONTRACT=$PROTOCOL_STATE_CONTRACT
      - PROST_RPC_URL=$PROST_RPC_URL
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
  audit-protocol:
    image: powerloom-audit-protocol
    expose:
      - 9000
      - 9002
      - 9030
    ports:
      - 9000:9000
      - 9002:9002
      - 9030:9030
    depends_on:
      redis:
         condition: service_healthy
      rabbitmq:
         condition: service_healthy
    volumes:
      - local_cache:/home/ubuntu/local_cache/
      - ./logs/audit-protocol:/root/.pm2/logs
    links:
      - "ipfs"
      - "redis"
      - "rabbitmq"
    environment:
      - SIGNER_ACCOUNT_ADDRESS=$SIGNER_ACCOUNT_ADDRESS
      - SIGNER_ACCOUNT_PRIVATE_KEY=$SIGNER_ACCOUNT_PRIVATE_KEY
      - PROST_RPC_URL=$PROST_RPC_URL
      - IPFS_URL=$IPFS_URL
      - IPFS_API_KEY=$IPFS_API_KEY
      - IPFS_API_SECRET=$IPFS_API_SECRET
      - PROTOCOL_STATE_CONTRACT=$PROTOCOL_STATE_CONTRACT
      - RELAYER_HOST=$RELAYER_HOST
      - SLACK_REPORTING_URL=$SLACK_REPORTING_URL
      - POWERLOOM_REPORTING_URL=$POWERLOOM_REPORTING_URL
      - WEB3_STORAGE_TOKEN=$WEB3_STORAGE_TOKEN
      - NAMESPACE=$NAMESPACE
      - PROST_CHAIN_ID=$PROST_CHAIN_ID
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    command:
      bash -c "sh snapshotter_autofill.sh && sh init_processes.sh"

  pooler:
    image: powerloom-pooler
    depends_on:
      audit-protocol:
        condition: service_healthy
    links:
      - "ipfs"
      - "redis"
      - "rabbitmq"
    expose:
      - 8002
      - 8555
    ports:
      - 8002:8002
      - 8555:8555
    volumes:
      - local_cache:/home/ubuntu/local_cache/
      - ./pooler/snapshotter:/snapshotter
      - ./pooler/config:/config
      - ./logs/pooler:/logs
    environment:
      - SIGNER_ACCOUNT_ADDRESS=$SIGNER_ACCOUNT_ADDRESS
      - SIGNER_ACCOUNT_PRIVATE_KEY=$SIGNER_ACCOUNT_PRIVATE_KEY
      - RELAYER_HOST=$RELAYER_HOST
      - SOURCE_RPC_URL=$SOURCE_RPC_URL
      - PROST_RPC_URL=$PROST_RPC_URL
      - IPFS_URL=$IPFS_URL
      - IPFS_API_KEY=$IPFS_API_KEY
      - IPFS_API_SECRET=$IPFS_API_SECRET
      - PROTOCOL_STATE_CONTRACT=$PROTOCOL_STATE_CONTRACT
      - SLACK_REPORTING_URL=$SLACK_REPORTING_URL
      - POWERLOOM_REPORTING_URL=$POWERLOOM_REPORTING_URL
      - WEB3_STORAGE_TOKEN=$WEB3_STORAGE_TOKEN
      - NAMESPACE=$NAMESPACE
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    command:
      bash -c "sh snapshotter_autofill.sh && sh init_processes.sh"

  redis:
    command: redis-server --appendonly yes
    image: "redis:alpine"
    expose:
      - 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure
  
  rabbitmq:
    image: rabbitmq:3-management
    #command: ["daemon"]
    expose:
      - 15672
      - 5672
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure
  ipfs:
    image: ipfs/kubo:release
    profiles: ["ipfs"]
    environment:
      - IPFS_PROFILE=server
    entrypoint: >
      /bin/sh -c "
      echo 'adding cronjob';
      mkdir -p /var/spool/cron/crontabs;
      croncmd=\"cd /data/ipfs && find . -type f -mtime +7 -name \\"*.data\\" | xargs rm -f 2>&1\";
      cronjob=\"0 * * * * $$croncmd\";
      ( crontab -l | grep -v -F \"$$croncmd\" ; echo \"$$cronjob\" ) | crontab -;
      echo 'starting ipfs';
      /sbin/tini -- /usr/local/bin/start_ipfs daemon --migrate=true --agent-version-suffix=docker;
      "
    #command:
    #   ["daemon", "--migrate=true", "--agent-version-suffix=docker"]
    expose:
      - 5001
    ports:
      - 5001:5001
    restart: on-failure
volumes:
  local_cache: